<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <title>innovaphone SDK - Transliterator Implementation</title>
    <link rel="stylesheet" href="../../web1/doc/innovaphone.doc.css" type="text/css" />
    <link rel="stylesheet" href="../../web1/doc/vs.css">
</head>

<body>
    <script src="../../web1/doc/highlight.pack.js"></script>
    <script>hljs.initHighlightingOnLoad();</script>

    <h1>Transliterator</h1>
    <p>
        This class converts any array of characters to the english alphabet, removing any accent marks and replacing all non-english characters (i.e. "ü" will be converted to "ue" and "á" will be "a").
    </p>
    <h2>File information</h2>
    <table style="margin-left:-12px">
        <tr><td><b>File</b></td><td>common/lib/transliterator.h<br><br></td></tr>
        <tr>
            <td><b>Classes</b></td>
            <td>
                <a href="#Transliterator">Transliterator</a><br>
                <br>
            </td>
        </tr>
    </table>

    <h1>Classes</h1>

    <h2 id="Transliterator">Transliterator</h2>
    <p>
        Class that converts any array of characters to the english alphabet.
    </p>

    <pre><code class="C++">class Transliterator {
    typedef struct {
        const char * i; // utf8-encoded string with one or more ucs2 source characters
        const char * o; // utf8-encoded string holding one or more ucs2 destination characters
    } MapEntryUtf8;

    typedef std::map<word, word *> TUCS2CharToStringMap;
    TUCS2CharToStringMap ucs2CharToStringMap;

    bool SetRuleBasedTransliteration1(MapEntryUtf8 * map, unsigned szMap);
    const word * MapUCS2CharToString(word ucs2Char);
    void MapUCS2Set(word ucs2Char, word * ucs2String, unsigned len);
    void MapUCS2Remove(word ucs2Char);
    void ToLower(char * s, unsigned &len);
    void ToLower(char * s);

public:
    Transliterator();
    virtual ~Transliterator();
    std::list<const char *> TransformWords(const char * wordsIn, bool unique);
    char * Transform(const char * wordIn);
};</code></pre>

    <h3 class="fnhead" id="Transliterator">Transliterator</h3>
    <p>
        Contructor.
    </p>

    <h3 class="fnhead" id="TransformWords">TransformWords</h3>
    <p>
        The function that will split the string, convert everything to lower case and transliterate it to the english alphabet. The output will be a list of strings without accent marks and non-english characters.
    </p>
    <dl>
        <dt>Parameters</dt>
        <dd>
            <table style="margin-left:-12px">
                <tr>
                    <td class="param">const char * <b>wordsIn</b></td>
                    <td>
                        The string that will be splited by whitespace and processed.
                    </td>
                </tr>
                <tr>
                    <td class="param">bool <b>unique</b></td>
                    <td>
                        If true, the output array will not contain duplicated strings.
                    </td>
                </tr>
            </table>
        </dd>
    </dl>

    <h3 class="fnhead" id="Transform">Transform</h3>
    <p>
        This is the function that returns the input string transliterated.
    </p>
    <dl>
        <dt>Parameters</dt>
        <dd>
            <table style="margin-left:-12px">
                <tr>
                    <td class="param">const char * <b>wordsIn</b></td>
                    <td>
                        The string that will be transliterated.
                    </td>
                </tr>
            </table>
        </dd>
    </dl>


</body>
</html>
